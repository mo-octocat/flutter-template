name: |
  Repository Creation: Finalize
description: |
  Action used to fulfill issue-ops requests around creating GitHub repositories.
inputs:
  authentication:
    description: Method to authenticate client; either 'app' or 'token'
    required: true
  application-id:
    description: Application ID of GitHub App, used if `authentication` is 'app'
    required: false
  application-private-key:
    description: Private SSH key of GitHub App, used if `authentication` is 'app'
    required: false
  github-token:
    description: GitHub token, used if `authentication` is 'token'
    required: false
  config-repo-owner:
    description: The org where is the config repo exsits
    required: true
  config-repo:
    description: The the config repo name
    required: true
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate
      id: authenticate
      uses: ./actions/authenticate
      with:
        authentication: ${{ inputs.authentication }}
        application-id: ${{ inputs.application-id }}
        application-private-key: ${{ inputs.application-private-key }}
        github-token: ${{ inputs.github-token }}

    - name: Checkout Remote Repo
      id: checkout
      uses: actions/checkout@v4
      with:
        repository:  ${{ inputs.config-repo-owner }}/${{ inputs.config-repo }}
        token: ${{ steps.authenticate.outputs.token }}
        ref: "main"
        path: "config-repo"
    - name: Parse issue
      id: parse
      uses: ./actions/parse
    - name: Update config
      id: update-config
      uses: actions/github-script@v6
      env:
        ISSUE_FORM_JSON: ${{ steps.parse.outputs.data }}
        FINALIZE_FILE: ${{ github.action_path }}/finalize.js
      with:
        github-token: ${{ steps.authenticate.outputs.token }}
        script: |
          const finalize = require(process.env.FINALIZE_FILE)
          await finalize({github, context, core})
    - name: Verify update repository results
      uses: actions/github-script@v6
      env:
        UPDATE_CONFIG_JSON: ${{ steps.update-config.outputs.config }}
      with:
        script: |
          const response = JSON.parse(process.env.UPDATE_CONFIG_JSON)
          const body = `
          **The Config file has been updated successfully**

          <details>
            <summary>Update AWS Config File Response</summary>

            \`\`\`json
            ${response}
            \`\`\`
          </details>
          `

          github.rest.issues.createComment({
            ...context.repo,
            issue_number: context.issue.number,
            body
          })

    - name: Close issue
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.update({
            ...context.repo,
            issue_number: context.issue.number,
            state: "closed",
          })
