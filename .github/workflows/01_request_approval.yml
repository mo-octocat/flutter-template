name: AWS Account Creation Validation

on:
  issues:
    types:
      - opened
  workflow_dispatch:

env:
  NEW_REQUEST_LABEL_NAME: "aws-account-request"
  APPROVAL_REQUEST_LABEL_NAME: "aws-account-approval"
  APPROVAL_TEAM: "mo-octocat/aws-account-approval-team"

jobs:
  mention_for_approval:
    runs-on: ubuntu-latest
    name: Mention for approval
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Validate label and mention for approval
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Check if the issue has the specified label
        LABEL_CHECK=$(jq -r ".issue.labels[] | select(.name == \"$NEW_REQUEST_LABEL_NAME\")" "$GITHUB_EVENT_PATH")

        if [ -n "$LABEL_CHECK" ]; then
          COMMENT_BODY="Hey @$APPROVAL_TEAM, please review and approve this request \"$NEW_REQUEST_LABEL_NAME\"."
          ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
          gh issue comment "$ISSUE_NUMBER" -R "$GITHUB_REPOSITORY" -b "$COMMENT_BODY"
          gh issue edit "$ISSUE_NUMBER" -R "$GITHUB_REPOSITORY" --remove-label "$NEW_REQUEST_LABEL_NAME" --add-label "$APPROVAL_REQUEST_LABEL_NAME"
        fi
      shell: bash
  approve_account_creation:
    name: Approve account creation
    runs-on: ubuntu-latest
    environment:
      name: Production
    needs: mention_for_approval
    steps:
      - name: Check if actor is a member of the approval team
        id: check_approval
        uses: actions/github-script@v6
        with:
          script: |
            const approvals = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId })

            if (approvals.data.length == 0){
              core.setFailed(`There are no approvals for this deployment. This is not allowed.`);
              return; }

            const latestApproval = approvals.data[0];
            core.setOutput('approver', latestApproval.user.login);
          debug: true
  check_if_approved:
    name: Check if approved
    runs-on: ubuntu-latest
    needs: approve_account_creation
    steps:
      - name: Check if actor is a member of the approval team
        id: check_team_membership
        uses: actions/github-script@v3
        with:
          script: |
              const TEAM_ID = process.env.APPROVAL_TEAM;
              const USERNAME =  '${{ needs.check_team_membership.outputs.approver }}';
              const RESULT = await github.teams.getMembershipForUserInOrg({
                org: context.repo.owner,
                team_slug: TEAM_ID,
                username: USERNAME
                });
              echo(RESULT.data.state);
              return { is_member: RESULT.data.state };
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Add approved label
        uses: actions/github-script@v6
        with:
          script: |
              const issue = context.issue;
              const labels = issue.labels.nodes;
              const approvedLabel = labels.find(label => label.name === process.env.APPROVED_LABEL_NAME);
                if (!approvedLabel) {
                  github.issues.addLabels({
                    owner: issue.owner,
                    repo: issue.repo,
                    issue_number: issue.number,
                    labels: [process.env.APPROVED_LABEL_NAME]
                    });
                  }
          github-token: ${{ secrets.GITHUB_TOKEN }}
  create_repo:
    name: Create repository
    runs-on: ubuntu-latest
    environment:
      name: Production
    needs: check_if_approved
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: mo-octocat/flutter-template
          event-type: create-repo
          client-payload: '{"repo_name": "${{ github.event.issue.title }}", "description": "${{ github.event.issue.body }}"}'

