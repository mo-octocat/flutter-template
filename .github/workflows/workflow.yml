name: Create AWS Account and Repository
on:
  issues:
    types: [opened, closed]
  workflow_dispatch:

env:
  REVIEWER_TEAM: aws-account-approval-team
  APPROVAL_TEAM: aws-account-approval-team
jobs:
  assign:
    name: Assign new issue
    runs-on: ubuntu-20.04
    if: contains(github.event.issue.labels.*.name, 'createrepo') && github.event.action == 'opened'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assign
        uses: ./actions/assign
        with:
          authentication: app
          application-id: ${{ secrets.APP_ID }}
          application-private-key: ${{ secrets.APP_PEM }}
          team-assign: ${{ env.REVIEWER_TEAM }}
      - name: add labels
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: |
            aws-account-request
  validate:
    name: Validate issue
    runs-on: ubuntu-20.04
    needs: assign
    if: contains(github.event.issue.labels.*.name, 'createrepo') && github.event.issue.state == 'open'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Validate
      uses: ./actions/validate
      with:
        authentication: app
        application-id: ${{ secrets.APP_ID }}
        application-private-key: ${{ secrets.APP_PEM }}
        team-assign: ${{ env.APPROVAL_TEAM }}
    - name: add labels
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: |
          aws-account-approval
  fulfill:
    name: Fulfill issue
    runs-on: ubuntu-20.04
    needs: validate
    environment:
        name: Production
    if: contains(github.event.issue.labels.*.name, 'createrepo') && github.event.issue.state == 'open'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Fulfill
      uses: ./actions/fulfill
      with:
        authentication: app
        application-id: ${{ secrets.APP_ID }}
        application-private-key: ${{ secrets.APP_PEM }}
        team-assign: ${{ env.APPROVAL_TEAM }}
    - name: add labels
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: |
          aws-account-creation-approved
  finalize:
    name: Finalize & update Config File
    runs-on: ubuntu-20.04
    needs: fulfill
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Update Config
      uses: ./actions/finalize
      with:
        authentication: app
        application-id: ${{ secrets.APP_ID }}
        application-private-key: ${{ secrets.APP_PEM }}
        config-repo-owner: mo-octocat
        config-repo: aws-stack-fluttertech-landing-zone-config
